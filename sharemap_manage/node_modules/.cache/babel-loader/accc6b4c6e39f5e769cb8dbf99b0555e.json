{"ast":null,"code":"import { getCurrentInstance, reactive, ref } from 'vue';\nexport default {\n  setup() {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    });\n    const total = ref(0);\n    const userlist = reactive([{\n      _id: '12345',\n      username: 'userOne',\n      first_name: 'User',\n      last_name: 'one',\n      password: 'slowaging123',\n      address: 'long long text to see',\n      profession: ['a', 'b', 'c'],\n      email: 'hello@163.com',\n      cell: '1000000'\n    }, {\n      _id: '12ddd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1dsgad5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1daggag5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12dagdgae5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12agadd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }]); // add form\n\n    const addFormRef = ref();\n    const addDialogVisible = ref(false);\n    const addForm = reactive({\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      address: '',\n      profession: [],\n      email: '',\n      cell: ''\n    });\n    const addFormRules = reactive({\n      username: [{\n        required: true,\n        message: 'Input user name',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Input user password',\n        trigger: 'blur'\n      }]\n    }); // page\n\n    const handleSizeChange = size => {\n      this.queryInfo.pagesize = size;\n      this.getUserList();\n    };\n\n    const handleCurrentChange = size => {\n      this.queryInfo.pagenum = page;\n      this.getUserList();\n    }; // user buttons\n\n\n    const editUserClicked = id => {\n      console.log(id);\n    };\n\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    const deleteUserClicked = async id => {\n      const confirmResult = await proxy.$confirm('This User Will be deleted.', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).catch(error => error);\n\n      if (confirmResult !== 'confirm') {// confirm result\n      } else {\n        this.deleteUser(id);\n      }\n    }; // dialog\n\n\n    const addDialogClosed = () => {\n      addFormRef.value.resetFields();\n    }; // api functions\n\n\n    const getUserList = async () => {\n      const result = await this.$http.get('/api/user', {\n        params: this.queryInfo\n      });\n      console.log(result);\n    };\n\n    const addUser = () => {};\n\n    const deleteUser = id => {};\n\n    const updateUser = id => {};\n\n    return {\n      queryInfo,\n      userlist,\n      total,\n      addDialogVisible,\n      addFormRef,\n      addForm,\n      addFormRules,\n      handleSizeChange,\n      handleCurrentChange,\n      editUserClicked,\n      deleteUserClicked,\n      addDialogClosed,\n      updateUser\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getCurrentInstance","reactive","ref","setup","queryInfo","query","pagenum","pagesize","total","userlist","_id","username","first_name","last_name","password","address","profession","email","cell","addFormRef","addDialogVisible","addForm","addFormRules","required","message","trigger","handleSizeChange","size","getUserList","handleCurrentChange","page","editUserClicked","id","console","log","proxy","deleteUserClicked","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","error","deleteUser","addDialogClosed","value","resetFields","result","$http","get","params","addUser","updateUser"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- list -->\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input name\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n            <template  #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getUserList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">Add User</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Username\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"Name\">\n          <template #default=\"scope\">{{scope.row.first_name}} {{scope.row.last_name}}</template>\n        </el-table-column>\n        <el-table-column label=\"Address\" prop=\"address\"></el-table-column>\n        <el-table-column label=\"Profession\" prop=\"profession\"></el-table-column>\n        <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"Cell\" prop=\"cell\"></el-table-column>\n        <el-table-column label=\"Manage\" width=\"145px\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"primary\" @click=\"editUserClicked(scope.row._id)\">Edit</el-button>\n            <el-button type=\"danger\" @click=\"deleteUserClicked(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n    <!-- addUser -->\n    <el-dialog title=\"Add User\" v-model=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Name\" prop=\"name\">\n          <el-col :span=\"11\">\n            <el-input v-model=\"addForm.first_name\" placeholder=\"first name\"></el-input>\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">\n          </el-col>\n          <el-col :span=\"11\">\n          <el-input v-model=\"addForm.last_name\" placeholder=\"last name\"></el-input>\n        </el-col>\n        </el-form-item>\n        <el-form-item label=\"Address\" prop=\"address\">\n          <el-input v-model=\"addForm.address\" type=\"textarea\"/>\n        </el-form-item>\n        <el-form-item label=\"Profession\">\n          <el-checkbox-group v-model=\"addForm.profession\">\n            <el-checkbox label = \"Medical Professional\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Educator\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Reasearcher\" name=\"profession\"></el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Cell\" prop=\"mobile\">\n          <el-input v-model=\"addForm.cell\"></el-input>\n        </el-form-item>\n        <!-- bottom -->\n        <el-form-item>\n          <el-button @click=\"addDialogVisible = false\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"addUser\">Create</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n    <!-- delelte -->\n  </div>\n</template>\n<script>\nimport { getCurrentInstance, reactive, ref } from 'vue'\nexport default {\n  setup () {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    })\n\n    const total = ref(0)\n    const userlist = reactive([{\n      _id: '12345',\n      username: 'userOne',\n      first_name: 'User',\n      last_name: 'one',\n      password: 'slowaging123',\n      address: 'long long text to see',\n      profession: ['a', 'b', 'c'],\n      email: 'hello@163.com',\n      cell: '1000000'\n    }, {\n      _id: '12ddd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1dsgad5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1daggag5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12dagdgae5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12agadd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }])\n\n    // add form\n    const addFormRef = ref()\n    const addDialogVisible = ref(false)\n    const addForm = reactive({\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      address: '',\n      profession: [],\n      email: '',\n      cell: ''\n    })\n    const addFormRules = reactive({\n      username: [\n        { required: true, message: 'Input user name', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: 'Input user password', trigger: 'blur' }\n      ]\n    })\n    // page\n    const handleSizeChange = (size) => {\n      this.queryInfo.pagesize = size\n      this.getUserList()\n    }\n    const handleCurrentChange = (size) => {\n      this.queryInfo.pagenum = page\n      this.getUserList()\n    }\n    // user buttons\n    const editUserClicked = (id) => {\n      console.log(id)\n    }\n    const { proxy } = getCurrentInstance()\n    const deleteUserClicked = async (id) => {\n      const confirmResult = await proxy.$confirm(\n        'This User Will be deleted.',\n        'Warning',\n        {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }\n      ).catch(error => error)\n      if (confirmResult !== 'confirm') {\n        // confirm result\n      } else {\n        this.deleteUser(id)\n      }\n    }\n    // dialog\n    const addDialogClosed = () => {\n      addFormRef.value.resetFields()\n    }\n    // api functions\n    const getUserList = async () => {\n      const result = await this.$http.get('/api/user', {\n        params: this.queryInfo\n      })\n      console.log(result)\n    }\n    const addUser = () => {\n\n    }\n    const deleteUser = (id) => {\n\n    }\n    const updateUser = (id) => {\n\n    }\n    return { queryInfo, userlist, total, addDialogVisible, addFormRef, addForm, addFormRules, handleSizeChange, handleCurrentChange, editUserClicked, deleteUserClicked, addDialogClosed, updateUser }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}