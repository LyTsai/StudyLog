{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { getCurrentInstance, reactive, ref, unref } from 'vue';\nexport default {\n  setup() {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    });\n    const userlist = reactive([{\n      _id: '12345',\n      username: 'userOne',\n      first_name: 'User',\n      last_name: 'one',\n      password: 'slowaging123',\n      address: 'long long text to see',\n      profession: ['a', 'b', 'c'],\n      email: 'hello@163.com',\n      cell: '1000000'\n    }, {\n      _id: '12ddd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1dsgad5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1daggag5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12dagdgae5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12agadd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }]);\n    const total = ref(0); // add form\n\n    const addFormRef = ref();\n    const dialogVisible = ref(false);\n    const addForm = reactive({\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      address: '',\n      profession: [],\n      email: '',\n      cell: ''\n    }); // rules\n\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        return cb();\n      }\n\n      cb(new Error('Please input a valid email address'));\n    };\n\n    const addFormRules = reactive({\n      username: [{\n        required: true,\n        message: 'Input user name',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Input user password',\n        trigger: 'blur'\n      }],\n      email: [// { message: 'Input a valid email address', trigger: 'blur' },\n      {\n        validator: checkEmail,\n        trigger: 'blur'\n      }]\n    }); // page\n\n    const handleSizeChange = size => {\n      queryInfo.pagesize = size;\n      getUserList();\n    };\n\n    const handleCurrentChange = page => {\n      queryInfo.pagenum = page;\n      getUserList();\n    }; // user buttons\n\n\n    const editUserClicked = id => {\n      dialogVisible.value = true;\n      console.log(id);\n    };\n\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    const deleteUserClicked = async id => {\n      const confirmResult = await proxy.$confirm('This User Will be deleted.', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).catch(error => error);\n\n      if (confirmResult !== 'confirm') {// cancel\n      } else {\n        deleteUser(id);\n      }\n    }; // dialog\n\n\n    const showForAdd = ref(true);\n\n    const dialogClosed = () => {\n      addFormRef.value.resetFields();\n    };\n\n    const createUser = async () => {\n      const addForm = unref(addFormRef);\n      if (!addForm) return;\n      await addForm.validate((valid, fields) => {\n        if (valid) {\n          addUser();\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    }; // api functions\n\n\n    const getUserList = async () => {\n      // const result = await proxy.$http.get('/api/user', {\n      //   params: queryInfo\n      // })\n      // console.log(result)\n      total.value = userlist.length;\n    };\n\n    const addUser = async () => {\n      // const add = await proxy.$http.post('/api/user', {\n      //   params: addForm.value\n      // })\n      // console.log(add)\n      console.log(addForm);\n      userlist.push(addForm);\n      getUserList();\n      dialogClosed();\n    };\n\n    async function deleteUser(id) {\n      // delete by id\n      // const deleted = await proxy.$http.delele('/api/user', {\n      //   params: {\n      //     _id: id\n      //   }\n      // })\n      // console.log(deleted)\n      for (let index = 0; index < userlist.length; index++) {\n        const element = userlist[index];\n\n        if (element._id === id) {\n          userlist.splice(index, 1);\n          getUserList();\n          break;\n        }\n      }\n    }\n\n    const updateUser = id => {};\n\n    return {\n      queryInfo,\n      userlist,\n      total,\n      showForAdd,\n      dialogVisible,\n      addFormRef,\n      addForm,\n      addFormRules,\n      handleSizeChange,\n      handleCurrentChange,\n      editUserClicked,\n      deleteUserClicked,\n      dialogClosed,\n      createUser,\n      updateUser\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getCurrentInstance","reactive","ref","unref","setup","queryInfo","query","pagenum","pagesize","userlist","_id","username","first_name","last_name","password","address","profession","email","cell","total","addFormRef","dialogVisible","addForm","checkEmail","rule","value","cb","regEmail","test","Error","addFormRules","required","message","trigger","validator","handleSizeChange","size","getUserList","handleCurrentChange","page","editUserClicked","id","console","log","proxy","deleteUserClicked","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","error","deleteUser","showForAdd","dialogClosed","resetFields","createUser","validate","valid","fields","addUser","length","push","index","element","splice","updateUser"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- list -->\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input name\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n            <template  #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getUserList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"dialogVisible = true\">Add User</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Username\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"Name\">\n          <template #default=\"scope\">{{scope.row.first_name}} {{scope.row.last_name}}</template>\n        </el-table-column>\n        <el-table-column label=\"Address\" prop=\"address\"></el-table-column>\n        <el-table-column label=\"Profession\" prop=\"profession\"></el-table-column>\n        <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"Cell\" prop=\"cell\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"110\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"text\" size=\"small\" @click=\"editUserClicked(scope.row._id)\">Edit</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"deleteUserClicked(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n    <!-- add or modify User -->\n    <el-dialog :title=\"showForAdd ? 'Add User' : 'Modify User'\" v-model=\"dialogVisible\" width=\"50%\" @close=\"dialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Name\">\n          <el-col :span=\"11\">\n            <el-form-item prop=\"first_name\">\n             <el-input v-model=\"addForm.first_name\" placeholder=\"first name\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"last_name\">\n              <el-input v-model=\"addForm.last_name\" placeholder=\"last name\"></el-input>\n            </el-form-item>\n        </el-col>\n        </el-form-item>\n        <el-form-item label=\"Address\" prop=\"address\">\n          <el-input v-model=\"addForm.address\" type=\"textarea\"/>\n        </el-form-item>\n        <el-form-item label=\"Profession\" prop=\"profession\">\n          <el-checkbox-group v-model=\"addForm.profession\">\n            <el-checkbox label = \"Medical Professional\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Educator\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Reasearcher\" name=\"profession\"></el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Cell\" prop=\"mobile\">\n          <el-input v-model=\"addForm.cell\"></el-input>\n        </el-form-item>\n        <!-- bottom -->\n        <el-form-item>\n          <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"createUser\">Confirm</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n    <!-- delelte -->\n  </div>\n</template>\n<script>\nimport { getCurrentInstance, reactive, ref, unref } from 'vue'\nexport default {\n  setup () {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    })\n\n    const userlist = reactive([{\n      _id: '12345',\n      username: 'userOne',\n      first_name: 'User',\n      last_name: 'one',\n      password: 'slowaging123',\n      address: 'long long text to see',\n      profession: ['a', 'b', 'c'],\n      email: 'hello@163.com',\n      cell: '1000000'\n    }, {\n      _id: '12ddd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1dsgad5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '1daggag5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12dagdgae5',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }, {\n      _id: '12agadd345',\n      username: 'user2',\n      first_name: 'User',\n      last_name: '2',\n      password: 'slowaging123d',\n      profession: ['a', 'b'],\n      email: 'hello@163.com'\n    }])\n    const total = ref(0)\n    // add form\n    const addFormRef = ref()\n    const dialogVisible = ref(false)\n    const addForm = reactive({\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      address: '',\n      profession: [],\n      email: '',\n      cell: ''\n    })\n    // rules\n    var checkEmail = (rule, value, cb) => {\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\n      if (regEmail.test(value)) {\n        return cb()\n      }\n      cb(new Error('Please input a valid email address'))\n    }\n    const addFormRules = reactive({\n      username: [\n        { required: true, message: 'Input user name', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: 'Input user password', trigger: 'blur' }\n      ],\n      email: [\n        // { message: 'Input a valid email address', trigger: 'blur' },\n        { validator: checkEmail, trigger: 'blur' }\n      ]\n    })\n\n    // page\n    const handleSizeChange = (size) => {\n      queryInfo.pagesize = size\n      getUserList()\n    }\n    const handleCurrentChange = (page) => {\n      queryInfo.pagenum = page\n      getUserList()\n    }\n    // user buttons\n    const editUserClicked = (id) => {\n      dialogVisible.value = true\n      console.log(id)\n    }\n    const { proxy } = getCurrentInstance()\n    const deleteUserClicked = async (id) => {\n      const confirmResult = await proxy.$confirm(\n        'This User Will be deleted.',\n        'Warning',\n        {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }\n      ).catch(error => error)\n      if (confirmResult !== 'confirm') {\n        // cancel\n      } else {\n        deleteUser(id)\n      }\n    }\n    // dialog\n    const showForAdd = ref(true)\n    const dialogClosed = () => {\n      addFormRef.value.resetFields()\n    }\n    const createUser = async () => {\n      const addForm = unref(addFormRef)\n      if (!addForm) return\n      await addForm.validate((valid, fields) => {\n        if (valid) {\n          addUser()\n        } else {\n          console.log('error submit!', fields)\n        }\n      })\n    }\n    // api functions\n    const getUserList = async () => {\n      // const result = await proxy.$http.get('/api/user', {\n      //   params: queryInfo\n      // })\n      // console.log(result)\n      total.value = userlist.length\n    }\n    const addUser = async () => {\n      // const add = await proxy.$http.post('/api/user', {\n      //   params: addForm.value\n      // })\n      // console.log(add)\n      console.log(addForm)\n      userlist.push(addForm)\n      getUserList()\n      dialogClosed()\n    }\n    async function deleteUser (id) {\n      // delete by id\n      // const deleted = await proxy.$http.delele('/api/user', {\n      //   params: {\n      //     _id: id\n      //   }\n      // })\n      // console.log(deleted)\n      for (let index = 0; index < userlist.length; index++) {\n        const element = userlist[index]\n        if (element._id === id) {\n          userlist.splice(index, 1)\n          getUserList()\n          break\n        }\n      }\n    }\n    const updateUser = (id) => {\n\n    }\n    return { queryInfo, userlist, total, showForAdd, dialogVisible, addFormRef, addForm, addFormRules, handleSizeChange, handleCurrentChange, editUserClicked, deleteUserClicked, dialogClosed, createUser, updateUser }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}