{"ast":null,"code":"export default {\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: [{\n        username: 'huiwang',\n        first_name: 'huiwang',\n        last_name: 'test',\n        password: 'slowaging123'\n      }]\n    };\n  },\n\n  methods: {\n    getUserList: async function () {\n      const {\n        data: res\n      } = await this.$http.get('/weatherforecast'); // if (res.meta.status !== 200) {\n      //   console.log(res)\n      //   return this.$message.error('Failed')\n      // }\n\n      console.log(res); // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n\n    addUser() {}\n\n  },\n\n  created() {\n    this.getUserList();\n  }\n\n};","map":{"version":3,"mappings":"AA4CA,eAAe;AACbA,MAAG,GAAK;AACN,WAAO;AACLC,eAAS,EAAE;AACTC,aAAK,EAAE,EADE;AAETC,eAAO,EAAE,CAFA;AAGTC,gBAAQ,EAAE;AAHD,OADN;AAMLC,cAAQ,EAAE,CAAC;AACTC,gBAAQ,EAAE,SADD;AAETC,kBAAU,EAAC,SAFF;AAGTC,iBAAS,EAAE,MAHF;AAITC,gBAAQ,EAAE;AAJD,OAAD;AANL,KAAP;AAaD,GAfY;;AAgBbC,SAAO,EAAE;AACPC,eAAW,EAAE,kBAAkB;AAC7B,YAAM;AAAEX,YAAI,EAAEY;AAAR,UAAgB,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAe,kBAAf,CAA5B,CAD6B,CAE7B;AACA;AAEA;AACA;;AACAC,aAAO,CAACC,GAAR,CAAYJ,GAAZ,EAP6B,CAQ7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA7BM;;AA8BPK,WAAM,GAAK,CAEX;;AAhCO,GAhBI;;AAkDbC,SAAM,GAAK;AACT,SAAKP,WAAL;AACF;;AApDa,CAAf","names":["data","queryInfo","query","pagenum","pagesize","userlist","username","first_name","last_name","password","methods","getUserList","res","$http","get","console","log","addUser","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- list -->\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input name\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n            <template  #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getUserList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">Add Uer</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column label=\"Username\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"Name\" prop=\"name\"></el-table-column>\n        <el-table-column label=\"Address\" prop=\"address\"></el-table-column>\n        <el-table-column label=\"Profession\" prop=\"profession\"></el-table-column>\n        <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"Cell\" prop=\"cell\"></el-table-column>\n        <el-table-column label=\"Manage\" width=\"180px\">\n          <template #scope=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\">Edit</el-button> -->\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeUserById(scope.row.id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n        </el-pagination>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: [{\n        username: 'huiwang',\n        first_name:'huiwang',\n        last_name: 'test',\n        password: 'slowaging123'\n      }]\n    }\n  },\n  methods: {\n    getUserList: async function () {\n      const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n\n      //   return this.$message.error('Failed')\n      // }\n      console.log(res)\n      // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n    addUser () {\n\n    }\n  },\n  created () {\n    this.getUserList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}