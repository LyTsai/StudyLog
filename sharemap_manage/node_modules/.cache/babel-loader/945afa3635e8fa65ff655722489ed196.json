{"ast":null,"code":"export default {\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: [{\n        _id: '12345',\n        username: 'userOne',\n        first_name: 'User',\n        last_name: 'one',\n        password: 'slowaging123',\n        address: 'long long text to see',\n        profession: ['a', 'b', 'c'],\n        email: 'hello@163.com',\n        cell: '1000000'\n      }, {\n        _id: '12ddd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1dsgad5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1daggag5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12dagdgae5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12agadd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }],\n      addDialogVisible: false,\n      addForm: {\n        username: '',\n        password: '',\n        first_name: '',\n        last_name: '',\n        address: '',\n        profession: [],\n        email: '',\n        cell: ''\n      },\n      addFormRules: {\n        username: [{\n          required: true,\n          message: 'Input user name',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    fullname: function (id) {\n      console.log(id);\n    },\n    getUserList: async function () {// const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res)\n      // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n    addUser: function () {},\n    handleSizeChange: function (size) {\n      this.queryInfo.pagesize = size;\n      this.getUserList();\n    },\n    handleCurrentChange: function (page) {\n      this.queryInfo.pagenum = page;\n      this.getUserList();\n    },\n    editUser: function (id) {\n      console.log(id);\n    },\n    removeUser: function (id) {},\n    addDialogClosed: function () {\n      this.$refs.addFormRef.resetFields();\n    }\n  },\n  computed: {\n    total: function () {\n      return this.userlist.length;\n    }\n  },\n\n  created() {\n    this.getUserList();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","queryInfo","query","pagenum","pagesize","userlist","_id","username","first_name","last_name","password","address","profession","email","cell","addDialogVisible","addForm","addFormRules","required","message","trigger","methods","fullname","id","console","log","getUserList","addUser","handleSizeChange","size","handleCurrentChange","page","editUser","removeUser","addDialogClosed","$refs","addFormRef","resetFields","computed","total","length","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- list -->\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input name\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n            <template  #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getUserList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">Add User</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Username\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"Name\">\n          <template #default=\"scope\">{{scope.row.first_name}} {{scope.row.last_name}}</template>\n        </el-table-column>\n        <el-table-column label=\"Address\" prop=\"address\"></el-table-column>\n        <el-table-column label=\"Profession\" prop=\"profession\"></el-table-column>\n        <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"Cell\" prop=\"cell\"></el-table-column>\n        <el-table-column label=\"Manage\" width=\"135px\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"primary\" @click=\"editUser(scope.row._id)\">Edit</el-button>\n            <el-button type=\"danger\" @click=\"removeUser(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n    <!-- addUser -->\n    <el-dialog title=\"Add User\" v-model=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"手机\" prop=\"mobile\">\n          <el-input v-model=\"addForm.mobile\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部区域 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- delelte -->\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: [{\n        _id: '12345',\n        username: 'userOne',\n        first_name: 'User',\n        last_name: 'one',\n        password: 'slowaging123',\n        address: 'long long text to see',\n        profession: ['a', 'b', 'c'],\n        email: 'hello@163.com',\n        cell: '1000000'\n      }, {\n        _id: '12ddd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1dsgad5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1daggag5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12dagdgae5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12agadd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }],\n      addDialogVisible: false,\n      addForm: {\n        username: '',\n        password: '',\n        first_name: '',\n        last_name: '',\n        address:'',\n        profession: [],\n        email: '',\n        cell: ''\n      },addFormRules: {\n         username: [\n          { required: true, message: 'Input user name', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    fullname: function (id) {\n      console.log(id)\n    },\n    getUserList: async function () {\n      // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res)\n      // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n    addUser: function () {\n\n    },\n    handleSizeChange: function (size) {\n      this.queryInfo.pagesize = size\n      this.getUserList()\n    },\n    handleCurrentChange: function (page) {\n      this.queryInfo.pagenum = page\n      this.getUserList()\n    },\n    editUser: function (id) {\n      console.log(id)\n    },\n    removeUser: function (id) {\n\n    },\n    addDialogClosed: function () {\n      this.$refs.addFormRef.resetFields()\n    }\n  },\n  computed: {\n    total: function () {\n      return this.userlist.length\n    }\n  },\n  created () {\n    this.getUserList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}