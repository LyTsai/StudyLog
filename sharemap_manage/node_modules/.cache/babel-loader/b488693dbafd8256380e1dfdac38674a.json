{"ast":null,"code":"import { reactive, ref } from 'vue';\nexport default {\n  setup() {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    });\n    const visualList = reactive({});\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: '' // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n\n    }); // dialog\n\n    const showForAdd = ref(true); // methods\n\n    const getVisualList = () => {};\n\n    const addVisualClicked = () => {\n      visualForm.title = '';\n      visualForm.abstract = '';\n      visualForm.keywords = [];\n      visualForm.subject = '';\n      visualForm.text = '';\n      visualForm.url = '';\n      visualForm.url_scancode = '';\n      showForAdd.value = true;\n      dialogVisible.value = true;\n    };\n\n    const dialogClosed = () => {\n      dialogVisible.value = false;\n    };\n\n    const editClicked = id => {\n      showForAdd.value = false;\n      userId.value = id;\n      const visual = getVisualByID(id).visual;\n      visualForm.title = visual.title;\n      visualForm.abstract = '';\n      visualForm.keywords = [];\n      visualForm.subject = '';\n      visualForm.text = '';\n      visualForm.url = '';\n      visualForm.url_scancode = '';\n    };\n\n    const deleteClicked = async id => {\n      const confirmResult = await proxy.$confirm('This Visual Will be deleted.', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).catch(error => error);\n\n      if (confirmResult !== 'confirm') {// cancel\n      } else {\n        deleteVisual(id);\n      }\n    };\n\n    function deleteVisual(id) {}\n\n    function getVisualByID(id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index];\n\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          };\n        }\n      }\n    }\n\n    return {\n      queryInfo,\n      visualList,\n      visualForm,\n      getVisualList,\n      addVisualClicked,\n      dialogClosed,\n      editClicked,\n      deleteClicked\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","setup","queryInfo","query","pagenum","pagesize","visualList","visualForm","title","abstract","keywords","subject","text","url","url_scancode","showForAdd","getVisualList","addVisualClicked","value","dialogVisible","dialogClosed","editClicked","id","userId","visual","getVisualByID","deleteClicked","confirmResult","proxy","$confirm","confirmButtonText","cancelButtonText","type","catch","error","deleteVisual","index","length","element","_id"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/visuals/VisualView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>Visuals</el-breadcrumb-item>\n      <el-breadcrumb-item>Visual List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input title\" v-model=\"queryInfo.query\" clearable @clear=\"getVisualList\">\n            <template #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getVisualList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addVisualClicked\">Add Visual</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"visualList\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Title\" prop=\"title\"></el-table-column>\n        <el-table-column label=\"Abstract\" prop=\"abstract\"></el-table-column>\n        <el-table-column label=\"Keywords\" prop=\"keywords\"></el-table-column>\n        <el-table-column label=\"Subject\" prop=\"subject\"></el-table-column>\n        <el-table-column label=\"Text\" prop=\"text\"></el-table-column>\n        <el-table-column label=\"Url\" prop=\"url\"></el-table-column>\n        <el-table-column label=\"Url_scancode\" prop=\"url_scancode\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"110\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"text\" size=\"small\" @click=\"editClicked(scope.row._id)\">Edit</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"deleteClicked(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n    <!-- add or modify User -->\n    <el-dialog :title=\"showForAdd ? 'Add Visual' : 'Modify Visual'\" v-model=\"dialogVisible\" width=\"50%\" @close=\"dialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Name\">\n          <el-col :span=\"11\">\n            <el-form-item prop=\"first_name\">\n             <el-input v-model=\"addForm.first_name\" placeholder=\"first name\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"last_name\">\n              <el-input v-model=\"addForm.last_name\" placeholder=\"last name\"></el-input>\n            </el-form-item>\n        </el-col>\n        </el-form-item>\n        <el-form-item label=\"Address\" prop=\"address\">\n          <el-input v-model=\"addForm.address\" type=\"textarea\"/>\n        </el-form-item>\n        <el-form-item label=\"Profession\" prop=\"profession\">\n          <el-checkbox-group v-model=\"addForm.profession\">\n            <el-checkbox label = \"Medical Professional\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Educator\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Reasearcher\" name=\"profession\"></el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Cell\" prop=\"mobile\">\n          <el-input v-model=\"addForm.cell\"></el-input>\n        </el-form-item>\n        <!-- bottom -->\n        <el-form-item>\n          <el-button @click=\"dialogClosed\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"createUser\">Confirm</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { reactive, ref } from 'vue'\nexport default {\n  setup () {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    })\n\n    const visualList = reactive({\n      \n    })\n\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: '',\n      // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n    })\n    // dialog\n    const showForAdd = ref(true)\n\n    // methods\n    const getVisualList = () => {\n\n    }\n\n    const addVisualClicked = () => {\n      visualForm.title = ''\n      visualForm.abstract = ''\n      visualForm.keywords = []\n      visualForm.subject = ''\n      visualForm.text = ''\n      visualForm.url = ''\n      visualForm.url_scancode = ''\n      showForAdd.value = true\n      dialogVisible.value = true\n    }\n\n    const dialogClosed = () => {\n      dialogVisible.value = false\n    }\n\n    const editClicked = (id) => {\n      showForAdd.value = false\n      userId.value = id\n      const visual = getVisualByID(id).visual\n      visualForm.title = visual.title\n      visualForm.abstract = ''\n      visualForm.keywords = []\n      visualForm.subject = ''\n      visualForm.text = ''\n      visualForm.url = ''\n      visualForm.url_scancode = ''\n    }\n\n    const deleteClicked = async (id) => {\n      const confirmResult = await proxy.$confirm(\n        'This Visual Will be deleted.',\n        'Warning',\n        {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }\n      ).catch(error => error)\n      if (confirmResult !== 'confirm') {\n        // cancel\n      } else {\n        deleteVisual(id)\n      }\n    }\n\n    function deleteVisual(id) {\n\n    }\n\n    function getVisualByID (id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index]\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          }\n        }\n      }\n    }\n\n    return { queryInfo, visualList, visualForm, getVisualList, addVisualClicked, dialogClosed, editClicked, deleteClicked }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}