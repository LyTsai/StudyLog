{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAW,KAAX","names":["_createElementBlock"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      userlist: []\n    }\n  },\n  methods: {\n    getAllUsers: async function () {\n      // const token = window.sessionStorage.getItem('token')\n      const loginUrl = 'http://localhost:5001/weatherforcast'\n      fetch(loginUrl, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n          // Authorization: token\n        }\n        // , mode: 'no-cors'\n      }).then(response => {\n        console.log(response)\n        if (!response.ok) {\n          throw new Error(response.status)\n        }\n        return response.json()\n      }).then(result => {\n      }).catch(error => {\n        alert(error)\n      })\n      // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res.data)\n      // this.userlist = await this.$http.get('/api/user')\n    }\n  },\n  created () {\n    this.getAllUsers()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}