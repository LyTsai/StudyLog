{"ast":null,"code":"import { getCurrentInstance, reactive, ref } from 'vue';\nexport default {\n  setup() {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    }); // page\n    // const handleSizeChange = (size) => {\n    //   queryInfo.pagesize = size\n    //   getUserList()\n    // }\n    // const handleCurrentChange = (page) => {\n    //   queryInfo.pagenum = page\n    //   getUserList()\n    // }\n    // data\n\n    const visualList = reactive([{\n      _id: '62390bb33528d814d2c384d5',\n      user_id: '62352300fe3ca8f02b47f2a6',\n      title: 'vitD',\n      abstract: 'poster card about vitD',\n      subject: 'vitD',\n      keywords: ['vtD', 'lifestyle', 'diabetes'],\n      text: 'the detailed text here',\n      url: 'url poiting to the html page',\n      url_scancode: 'url pointing to the scan code.  internal data field.'\n    }]);\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: '' // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n\n    }); // dialog\n\n    const dialogVisible = ref(false);\n    const showForAdd = ref(true); // methods\n\n    const getVisualList = () => {};\n\n    const addVisualClicked = () => {\n      visualForm.title = '';\n      visualForm.abstract = '';\n      visualForm.keywords = [];\n      visualForm.subject = '';\n      visualForm.text = '';\n      visualForm.url = '';\n      visualForm.url_scancode = '';\n      showForAdd.value = true;\n      dialogVisible.value = true;\n    };\n\n    const dialogClosed = () => {\n      dialogVisible.value = false;\n    };\n\n    const editClicked = id => {\n      showForAdd.value = false;\n      userId.value = id;\n      const visual = getVisualByID(id).visual;\n      visualForm.title = visual.title;\n      visualForm.abstract = visual.abstract;\n      visualForm.keywords = visual.keywords;\n      visualForm.subject = visual.subject;\n      visualForm.text = visual.text;\n      visualForm.url = visual.url;\n      visualForm.url_scancode = visual.url_scancode;\n    }; // data action\n\n\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    const deleteClicked = async id => {\n      const confirmResult = await proxy.$confirm('This Visual Will be deleted.', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).catch(error => error);\n\n      if (confirmResult !== 'confirm') {// cancel\n      } else {\n        deleteVisual(id);\n      }\n    };\n\n    function deleteVisual(id) {}\n\n    function getVisualByID(id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index];\n\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          };\n        }\n      }\n    }\n\n    return {\n      queryInfo,\n      visualList,\n      visualForm,\n      dialogVisible,\n      getVisualList,\n      addVisualClicked,\n      dialogClosed,\n      editClicked,\n      deleteClicked\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getCurrentInstance","reactive","ref","setup","queryInfo","query","pagenum","pagesize","visualList","_id","user_id","title","abstract","subject","keywords","text","url","url_scancode","visualForm","dialogVisible","showForAdd","getVisualList","addVisualClicked","value","dialogClosed","editClicked","id","userId","visual","getVisualByID","proxy","deleteClicked","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","error","deleteVisual","index","length","element"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/visuals/VisualView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>Visuals</el-breadcrumb-item>\n      <el-breadcrumb-item>Visual List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input title\" v-model=\"queryInfo.query\" clearable @clear=\"getVisualList\">\n            <template #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getVisualList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addVisualClicked\">Add Visual</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"visualList\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Title\" prop=\"title\"></el-table-column>\n        <el-table-column label=\"Abstract\" prop=\"abstract\"></el-table-column>\n        <el-table-column label=\"Keywords\" prop=\"keywords\"></el-table-column>\n        <el-table-column label=\"Subject\" prop=\"subject\"></el-table-column>\n        <el-table-column label=\"Text\" prop=\"text\"></el-table-column>\n        <el-table-column label=\"Url\" prop=\"url\"></el-table-column>\n        <el-table-column label=\"Url_scancode\" prop=\"url_scancode\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"110\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"text\" size=\"small\" @click=\"editClicked(scope.row._id)\">Edit</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"deleteClicked(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <!-- <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination> -->\n    </el-card>\n    <!-- add or modify User -->\n    <el-dialog :title=\"showForAdd ? 'Add Visual' : 'Modify Visual'\" v-model=\"dialogVisible\" width=\"50%\" @close=\"dialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"visualForm\" :rules=\"visuaFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Name\">\n          <el-col :span=\"11\">\n            <el-form-item prop=\"first_name\">\n             <el-input v-model=\"addForm.first_name\" placeholder=\"first name\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" class=\"text-center\">\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"last_name\">\n              <el-input v-model=\"addForm.last_name\" placeholder=\"last name\"></el-input>\n            </el-form-item>\n        </el-col>\n        </el-form-item>\n        <el-form-item label=\"Address\" prop=\"address\">\n          <el-input v-model=\"addForm.address\" type=\"textarea\"/>\n        </el-form-item>\n        <el-form-item label=\"Profession\" prop=\"profession\">\n          <el-checkbox-group v-model=\"addForm.profession\">\n            <el-checkbox label = \"Medical Professional\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Educator\" name=\"profession\"></el-checkbox>\n            <el-checkbox label = \"Reasearcher\" name=\"profession\"></el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Cell\" prop=\"mobile\">\n          <el-input v-model=\"addForm.cell\"></el-input>\n        </el-form-item>\n        <!-- bottom -->\n        <el-form-item>\n          <el-button @click=\"dialogClosed\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"createUser\">Confirm</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getCurrentInstance, reactive, ref } from 'vue'\nexport default {\n  setup () {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    })\n    // page\n    // const handleSizeChange = (size) => {\n    //   queryInfo.pagesize = size\n    //   getUserList()\n    // }\n    // const handleCurrentChange = (page) => {\n    //   queryInfo.pagenum = page\n    //   getUserList()\n    // }\n    // data\n    const visualList = reactive([{\n      _id: '62390bb33528d814d2c384d5',\n      user_id: '62352300fe3ca8f02b47f2a6',\n      title: 'vitD',\n      abstract: 'poster card about vitD',\n      subject: 'vitD',\n      keywords: ['vtD', 'lifestyle', 'diabetes'],\n      text: 'the detailed text here',\n      url: 'url poiting to the html page',\n      url_scancode: 'url pointing to the scan code.  internal data field.'\n    }])\n\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: ''\n      // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n    })\n    // dialog\n    const dialogVisible = ref(false)\n    const showForAdd = ref(true)\n\n    // methods\n    const getVisualList = () => {\n\n    }\n\n    const addVisualClicked = () => {\n      visualForm.title = ''\n      visualForm.abstract = ''\n      visualForm.keywords = []\n      visualForm.subject = ''\n      visualForm.text = ''\n      visualForm.url = ''\n      visualForm.url_scancode = ''\n      showForAdd.value = true\n      dialogVisible.value = true\n    }\n\n    const dialogClosed = () => {\n      dialogVisible.value = false\n    }\n\n    const editClicked = (id) => {\n      showForAdd.value = false\n      userId.value = id\n      const visual = getVisualByID(id).visual\n      visualForm.title = visual.title\n      visualForm.abstract = visual.abstract\n      visualForm.keywords = visual.keywords\n      visualForm.subject = visual.subject\n      visualForm.text = visual.text\n      visualForm.url = visual.url\n      visualForm.url_scancode = visual.url_scancode\n    }\n\n    // data action\n    const { proxy } = getCurrentInstance()\n    const deleteClicked = async (id) => {\n      const confirmResult = await proxy.$confirm(\n        'This Visual Will be deleted.',\n        'Warning',\n        {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }\n      ).catch(error => error)\n      if (confirmResult !== 'confirm') {\n        // cancel\n      } else {\n        deleteVisual(id)\n      }\n    }\n\n    function deleteVisual(id) {\n\n    }\n\n    function getVisualByID (id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index]\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          }\n        }\n      }\n    }\n\n    return { queryInfo, visualList, visualForm, dialogVisible, getVisualList, addVisualClicked, dialogClosed, editClicked, deleteClicked }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}