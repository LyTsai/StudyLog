{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  data() {\n    return {\n      userlist: []\n    };\n  },\n\n  methods: {\n    getAllUsers: async function () {\n      const loginUrl = 'https://localhost:5001/weatherforecast';\n      fetch(loginUrl, {\n        method: 'get',\n        body: body,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        } // , mode: 'no-cors'\n\n      }).then(response => {\n        console.log(response);\n\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n\n        return response.json();\n      }).then(result => {}).catch(error => {\n        alert(error);\n      }); // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res.data)\n      // this.userlist = await this.$http.get('/api/user')\n    }\n  },\n\n  created() {\n    this.getAllUsers();\n  }\n\n};","map":{"version":3,"mappings":";AAIA,eAAe;AACbA,MAAG,GAAK;AACN,WAAO;AACLC,cAAQ,EAAE;AADL,KAAP;AAGD,GALY;;AAMbC,SAAO,EAAE;AACPC,eAAW,EAAE,kBAAkB;AAC7B,YAAMC,QAAO,GAAI,wCAAjB;AACAC,WAAK,CAACD,QAAD,EAAW;AACdE,cAAM,EAAE,KADM;AAEdC,YAAI,EAAEA,IAFQ;AAGdC,eAAO,EAAE;AACP,0BAAgB;AADT,SAHK,CAMd;;AANc,OAAX,CAAL,CAOGC,IAPH,CAOQC,QAAO,IAAK;AAClBC,eAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAI,CAACA,QAAQ,CAACG,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,MAAnB,CAAN;AACF;;AACA,eAAOL,QAAQ,CAACM,IAAT,EAAP;AACD,OAbD,EAaGP,IAbH,CAaQQ,MAAK,IAAK,CAEjB,CAfD,EAeGC,KAfH,CAeSC,KAAI,IAAK;AAChBC,aAAK,CAACD,KAAD,CAAL;AACD,OAjBD,EAF6B,CAoB7B;AACA;AACA;AACA;AACA;AACA;AACF;AA3BO,GANI;;AAmCbE,SAAM,GAAK;AACT,SAAKlB,WAAL;AACF;;AArCa,CAAf","names":["data","userlist","methods","getAllUsers","loginUrl","fetch","method","body","headers","then","response","console","log","ok","Error","status","json","result","catch","error","alert","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      userlist: []\n    }\n  },\n  methods: {\n    getAllUsers: async function () {\n      const loginUrl = 'https://localhost:5001/weatherforecast'\n      fetch(loginUrl, {\n        method: 'get',\n        body: body,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n        // , mode: 'no-cors'\n      }).then(response => {\n        console.log(response)\n        if (!response.ok) {\n          throw new Error(response.status)\n        }\n        return response.json()\n      }).then(result => {\n        \n      }).catch(error => {\n        alert(error)\n      })\n      // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res.data)\n      // this.userlist = await this.$http.get('/api/user')\n    }\n  },\n  created () {\n    this.getAllUsers()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}