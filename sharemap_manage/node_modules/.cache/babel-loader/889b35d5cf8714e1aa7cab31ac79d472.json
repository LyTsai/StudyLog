{"ast":null,"code":"export default {\n  data() {\n    return {\n      userlist: []\n    };\n  },\n\n  methods: {\n    getAllUsers: async function () {\n      const {\n        data: res\n      } = await this.$http.get('/weatherforecast'); // if (res.meta.status !== 200) {\n      //   console.log(res)\n      //   return this.$message.error('Failed')\n      // }\n\n      console.log(res);\n      this.userlist = res.data; // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    }\n  },\n\n  created() {\n    this.getAllUsers();\n  }\n\n};","map":{"version":3,"mappings":"AAWA,eAAe;AACbA,MAAG,GAAK;AACN,WAAO;AACLC,cAAQ,EAAE;AADL,KAAP;AAGD,GALY;;AAMbC,SAAO,EAAE;AACPC,eAAW,EAAE,kBAAkB;AAC7B,YAAM;AAAEH,YAAI,EAAEI;AAAR,UAAgB,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAe,kBAAf,CAA5B,CAD6B,CAE7B;AACA;AAEA;AACA;;AACAC,aAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,WAAKH,QAAL,GAAgBG,GAAG,CAACJ,IAApB,CAR6B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AA7BO,GANI;;AAqCbS,SAAM,GAAK;AACT,SAAKN,WAAL;AACF;;AAvCa,CAAf","names":["data","userlist","methods","getAllUsers","res","$http","get","console","log","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    list\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      userlist: []\n    }\n  },\n  methods: {\n    getAllUsers: async function () {\n      const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n\n      //   return this.$message.error('Failed')\n      // }\n      console.log(res)\n      this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    }\n  },\n  created () {\n    this.getAllUsers()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}