{"ast":null,"code":"export default {\n  data() {\n    return {\n      userlist: []\n    };\n  },\n\n  methods: {\n    getAllUsers: async function () {\n      const {\n        data: res\n      } = await this.$http.get('/api/user');\n\n      if (res.meta.status !== 200) {\n        console.log(res);\n        return this.$message.error('Failed');\n      }\n\n      console.log(res.data);\n      this.userlist = await this.$http.get('/api/user'); // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    }\n  },\n\n  created() {\n    this.getAllUsers();\n  }\n\n};","map":{"version":3,"mappings":"AAIA,eAAe;AACbA,MAAG,GAAK;AACN,WAAO;AACLC,cAAQ,EAAE;AADL,KAAP;AAGD,GALY;;AAMbC,SAAO,EAAE;AACPC,eAAW,EAAE,kBAAkB;AAC7B,YAAM;AAAEH,YAAI,EAAEI;AAAR,UAAgB,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAe,WAAf,CAA5B;;AACA,UAAIF,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,eAAO,CAACC,GAAR,CAAYN,GAAZ;AAEA,eAAO,KAAKO,QAAL,CAAcC,KAAd,CAAoB,QAApB,CAAP;AACF;;AACAH,aAAO,CAACC,GAAR,CAAYN,GAAG,CAACJ,IAAhB;AACA,WAAKC,QAAL,GAAgB,MAAM,KAAKI,KAAL,CAAWC,GAAX,CAAe,WAAf,CAAtB,CAR6B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AA5BO,GANI;;AAoCbO,SAAM,GAAK;AACT,SAAKV,WAAL;AACF;;AAtCa,CAAf","names":["data","userlist","methods","getAllUsers","res","$http","get","meta","status","console","log","$message","error","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      userlist: []\n    }\n  },\n  methods: {\n    getAllUsers: async function () {\n      const { data: res } = await this.$http.get('/api/user')\n      if (res.meta.status !== 200) {\n        console.log(res)\n\n        return this.$message.error('Failed')\n      }\n      console.log(res.data)\n      this.userlist = await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    }\n  },\n  created () {\n    this.getAllUsers()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}