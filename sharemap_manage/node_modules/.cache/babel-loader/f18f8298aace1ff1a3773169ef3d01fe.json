{"ast":null,"code":"import { getCurrentInstance, reactive, ref, nextTick } from 'vue';\nexport default {\n  setup() {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    }); // page\n    // const handleSizeChange = (size) => {\n    //   queryInfo.pagesize = size\n    //   getUserList()\n    // }\n    // const handleCurrentChange = (page) => {\n    //   queryInfo.pagenum = page\n    //   getUserList()\n    // }\n    // data\n\n    const visualList = reactive([{\n      _id: '62390bb33528d814d2c384d5',\n      user_id: '62352300fe3ca8f02b47f2a6',\n      title: 'vitD',\n      abstract: 'poster card about vitD',\n      subject: 'vitD',\n      keywords: ['vtD', 'lifestyle', 'diabetes'],\n      text: 'the detailed text here',\n      url: 'url poiting to the html page',\n      url_scancode: 'url pointing to the scan code.  internal data field.'\n    }]);\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: '' // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n\n    }); // dialog\n\n    const visualFormRef = ref('');\n    const visualFormRules = {};\n    const dialogVisible = ref(false);\n    const showForAdd = ref(true);\n    const visualId = ref(''); // methods\n\n    const getVisualList = () => {};\n\n    const addVisualClicked = () => {\n      visualForm.title = '';\n      visualForm.abstract = '';\n      visualForm.keywords = [];\n      visualForm.subject = '';\n      visualForm.text = '';\n      visualForm.url = '';\n      visualForm.url_scancode = '';\n      showForAdd.value = true;\n      dialogVisible.value = true;\n    };\n\n    const editClicked = id => {\n      showForAdd.value = false;\n      visualId.value = id; // assign\n\n      const visual = getVisualByID(id).visual;\n      visualForm.title = visual.title;\n      visualForm.abstract = visual.abstract;\n      visualForm.keywords = visual.keywords;\n      visualForm.subject = visual.subject;\n      visualForm.text = visual.text;\n      visualForm.url = visual.url;\n      visualForm.url_scancode = visual.url_scancode; // show\n\n      dialogVisible.value = true;\n    };\n\n    const dialogClosed = () => {\n      dialogVisible.value = false;\n    };\n\n    const confirmDialog = () => {\n      // validate?\n      if (showForAdd.value) {// add\n      } else {// modify\n      }\n    }; // tag\n\n\n    const inputValue = ref('');\n    const inputVisible = ref(false); // const InputRef = ref<InstanceType<typeof ElInput>>()\n\n    const handleClose = index => {\n      visualForm.keywords.splice(index, 1);\n    };\n\n    const showInput = () => {\n      inputVisible.value = true;\n      nextTick(() => {// InputRef.value!.input!.focus()\n      });\n    };\n\n    const handleInputConfirm = () => {\n      if (inputValue.value) {\n        visualForm.keywords.push(inputValue.value);\n      }\n\n      inputVisible.value = false;\n      inputValue.value = '';\n    }; // data action\n\n\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    const deleteClicked = async id => {\n      const confirmResult = await proxy.$confirm('This Visual Will be deleted.', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).catch(error => error);\n\n      if (confirmResult !== 'confirm') {// cancel\n      } else {\n        deleteVisual(id);\n      }\n    };\n\n    function deleteVisual(id) {\n      const index = getVisualByID(id).index;\n      visualList.splice(index, 1);\n    }\n\n    function getVisualByID(id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index];\n\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          };\n        }\n      }\n    }\n\n    return {\n      queryInfo,\n      visualList,\n      visualForm,\n      visualFormRef,\n      visualFormRules,\n      dialogVisible,\n      getVisualList,\n      addVisualClicked,\n      editClicked,\n      deleteClicked,\n      dialogClosed,\n      confirmDialog,\n      inputVisible,\n      inputValue,\n      handleClose,\n      showInput,\n      handleInputConfirm\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["getCurrentInstance","reactive","ref","nextTick","setup","queryInfo","query","pagenum","pagesize","visualList","_id","user_id","title","abstract","subject","keywords","text","url","url_scancode","visualForm","visualFormRef","visualFormRules","dialogVisible","showForAdd","visualId","getVisualList","addVisualClicked","value","editClicked","id","visual","getVisualByID","dialogClosed","confirmDialog","inputValue","inputVisible","handleClose","index","splice","showInput","handleInputConfirm","push","proxy","deleteClicked","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","error","deleteVisual","length","element"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/visuals/VisualView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>Visuals</el-breadcrumb-item>\n      <el-breadcrumb-item>Visual List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input title\" v-model=\"queryInfo.query\" clearable @clear=\"getVisualList\">\n            <template #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getVisualList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addVisualClicked\">Add Visual</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"visualList\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Title\" prop=\"title\"></el-table-column>\n        <el-table-column label=\"Abstract\" prop=\"abstract\"></el-table-column>\n        <el-table-column label=\"Keywords\" prop=\"keywords\"></el-table-column>\n        <el-table-column label=\"Subject\" prop=\"subject\"></el-table-column>\n        <el-table-column label=\"Text\" prop=\"text\"></el-table-column>\n        <el-table-column label=\"Url\" prop=\"url\"></el-table-column>\n        <el-table-column label=\"Url_scancode\" prop=\"url_scancode\"></el-table-column>\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"110\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"text\" size=\"small\" @click=\"editClicked(scope.row._id)\">Edit</el-button>\n            <el-button type=\"text\" size=\"small\" @click=\"deleteClicked(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <!-- <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination> -->\n    </el-card>\n    <!-- add or modify User -->\n    <el-dialog :title=\"showForAdd ? 'Add Visual' : 'Modify Visual'\" v-model=\"dialogVisible\" width=\"50%\" @close=\"dialogClosed\">\n      <!-- edit -->\n      <el-form :model=\"visualForm\" :rules=\"visualFormRules\" ref=\"visualFormRef\" label-width=\"100px\">\n        <el-form-item label=\"Title\" prop=\"title\">\n          <el-input v-model=\"visualForm.title\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Abstract\" prop=\"abstract\">\n          <el-input v-model=\"visualForm.abstract\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Keywords\" prop=\"keywords\">\n          <el-tag v-for=\"(tag, index) in visualForm.keywords\" :key=\"tag\" class=\"mx-1\" closable :disable-transitions=\"false\" @close=\"handleClose(index)\">{{ tag }}</el-tag>\n          <el-input v-if=\"inputVisible\" ref=\"InputRef\" v-model=\"inputValue\" class=\"ml-1 w-20\" size=\"small\" @keyup.enter=\"handleInputConfirm\" @blur=\"handleInputConfirm\"/>\n          <el-button v-else class=\"button-new-tag ml-1\" size=\"small\" @click=\"showInput\"> + New Keyword </el-button>\n        </el-form-item>\n        <el-form-item label=\"Subject\" prop=\"subject\">\n          <el-input v-model=\"visualForm.subject\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Text\" prop=\"text\">\n          <el-input v-model=\"visualForm.text\" type=\"textarea\"/>\n        </el-form-item>\n        <el-form-item label=\"URL\" prop=\"url\">\n          <el-input v-model=\"visualForm.url\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"URL scancode\" prop=\"url_scancode\">\n          <el-input v-model=\"visualForm.url_scancode\"></el-input>\n        </el-form-item>\n        <!-- bottom -->\n        <el-form-item>\n          <el-button @click=\"dialogClosed\">Cancel</el-button>\n          <el-button type=\"primary\" @click=\"confirmDialog\">Confirm</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { getCurrentInstance, reactive, ref, nextTick } from 'vue'\nexport default {\n  setup () {\n    const queryInfo = reactive({\n      query: '',\n      pagenum: 1,\n      pagesize: 10\n    })\n    // page\n    // const handleSizeChange = (size) => {\n    //   queryInfo.pagesize = size\n    //   getUserList()\n    // }\n    // const handleCurrentChange = (page) => {\n    //   queryInfo.pagenum = page\n    //   getUserList()\n    // }\n    // data\n    const visualList = reactive([{\n      _id: '62390bb33528d814d2c384d5',\n      user_id: '62352300fe3ca8f02b47f2a6',\n      title: 'vitD',\n      abstract: 'poster card about vitD',\n      subject: 'vitD',\n      keywords: ['vtD', 'lifestyle', 'diabetes'],\n      text: 'the detailed text here',\n      url: 'url poiting to the html page',\n      url_scancode: 'url pointing to the scan code.  internal data field.'\n    }])\n\n    const visualForm = reactive({\n      title: '',\n      abstract: '',\n      keywords: [],\n      subject: '',\n      text: '',\n      url: '',\n      url_scancode: ''\n      // categories: [],\n      // forwarded: 0,\n      // likes: 0,\n      // user_id: ''\n    })\n    // dialog\n    const visualFormRef = ref('')\n    const visualFormRules = {\n\n    }\n    const dialogVisible = ref(false)\n    const showForAdd = ref(true)\n    const visualId = ref('')\n    // methods\n    const getVisualList = () => {\n      \n    }\n\n    const addVisualClicked = () => {\n      visualForm.title = ''\n      visualForm.abstract = ''\n      visualForm.keywords = []\n      visualForm.subject = ''\n      visualForm.text = ''\n      visualForm.url = ''\n      visualForm.url_scancode = ''\n      showForAdd.value = true\n      dialogVisible.value = true\n    }\n\n    const editClicked = (id) => {\n      showForAdd.value = false\n      visualId.value = id\n      // assign\n      const visual = getVisualByID(id).visual\n      visualForm.title = visual.title\n      visualForm.abstract = visual.abstract\n      visualForm.keywords = visual.keywords\n      visualForm.subject = visual.subject\n      visualForm.text = visual.text\n      visualForm.url = visual.url\n      visualForm.url_scancode = visual.url_scancode\n      // show\n      dialogVisible.value = true\n    }\n\n    const dialogClosed = () => {\n      dialogVisible.value = false\n    }\n\n    const confirmDialog = () => {\n      // validate?\n      if (showForAdd.value) {\n        // add\n      } else {\n        // modify\n      }\n    }\n\n    // tag\n    const inputValue = ref('')\n    const inputVisible = ref(false)\n    // const InputRef = ref<InstanceType<typeof ElInput>>()\n\n    const handleClose = (index) => {\n      visualForm.keywords.splice(index, 1)\n    }\n\n    const showInput = () => {\n      inputVisible.value = true\n      nextTick(() => {\n        // InputRef.value!.input!.focus()\n      })\n    }\n\n    const handleInputConfirm = () => {\n      if (inputValue.value) {\n        visualForm.keywords.push(inputValue.value)\n      }\n      inputVisible.value = false\n      inputValue.value = ''\n    }\n\n    // data action\n    const { proxy } = getCurrentInstance()\n    const deleteClicked = async (id) => {\n      const confirmResult = await proxy.$confirm(\n        'This Visual Will be deleted.',\n        'Warning',\n        {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }\n      ).catch(error => error)\n      if (confirmResult !== 'confirm') {\n        // cancel\n      } else {\n        deleteVisual(id)\n      }\n    }\n\n    function deleteVisual (id) {\n      const index = getVisualByID(id).index\n      visualList.splice(index, 1)\n    }\n\n    function getVisualByID (id) {\n      for (let index = 0; index < visualList.length; index++) {\n        const element = visualList[index]\n        if (element._id === id) {\n          return {\n            visual: element,\n            index: index\n          }\n        }\n      }\n    }\n\n    return { queryInfo, visualList, visualForm, visualFormRef, visualFormRules, dialogVisible, getVisualList, addVisualClicked, editClicked, deleteClicked, dialogClosed, confirmDialog, inputVisible, inputValue, handleClose, showInput, handleInputConfirm }\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n// .mx-1 {\n//   padding: 10px;\n// }\n</style>\n"]},"metadata":{},"sourceType":"module"}