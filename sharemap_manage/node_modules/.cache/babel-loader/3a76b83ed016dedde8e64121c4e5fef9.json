{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reactive, ref, unref } from 'vue';\nexport default {\n  setup() {\n    const ruleFormRef = ref();\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loginFormRules = reactive({\n      username: [{\n        required: true,\n        message: 'Please input a valid account',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Please input password',\n        trigger: 'blur'\n      }]\n    });\n\n    const resetLoginForm = () => {\n      const form = unref(ruleFormRef);\n      if (!form) return;\n      console.log('fa');\n      form.resetFields();\n    };\n\n    const login = async () => {\n      const form = unref(ruleFormRef);\n      if (!form) return;\n      await form.validate((valid, fields) => {\n        if (valid) {\n          accessLogin();\n        } else {\n          console.log('error submit!', fields);\n        }\n      });\n    };\n\n    function accessLogin() {\n      const loginUrl = 'https://annielyticx-gamedataauth.azurewebsites.net/oauth/token';\n      const body = 'username=' + loginForm.username + '&password=' + loginForm.password + '&grant_type=password';\n      fetch(loginUrl, {\n        method: 'post',\n        body: body,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (!response.ok) {\n          throw new Error('Failed to login' + response.status);\n        }\n\n        return response.json();\n      }).then(result => {\n        const token = result.access_token;\n        window.sessionStorage.setItem('token', token);\n        console.log('success'); // $router.push('/home')\n      }).catch(error => {\n        alert('Failed to login :' + error);\n      });\n    }\n\n    return {\n      loginForm,\n      loginFormRules,\n      resetLoginForm,\n      login\n    };\n  }\n\n};","map":{"version":3,"mappings":";AA2BA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,QAAqC,KAArC;AAEA,eAAe;AACbC,OAAI,GAAK;AACP,UAAMC,WAAU,GAAIH,GAAG,EAAvB;AACA,UAAMI,SAAQ,GAAIL,QAAQ,CAAC;AACzBM,cAAQ,EAAE,EADe;AAEzBC,cAAQ,EAAE;AAFe,KAAD,CAA1B;AAIA,UAAMC,cAAa,GAAIR,QAAQ,CAAC;AAC9BM,cAAQ,EAAE,CACR;AAAEG,gBAAQ,EAAE,IAAZ;AAAkBC,eAAO,EAAE,8BAA3B;AAA2DC,eAAO,EAAE;AAApE,OADQ,CADoB;AAI9BJ,cAAQ,EAAE,CACR;AAAEE,gBAAQ,EAAE,IAAZ;AAAkBC,eAAO,EAAE,uBAA3B;AAAoDC,eAAO,EAAE;AAA7D,OADQ;AAJoB,KAAD,CAA/B;;AASA,UAAMC,cAAa,GAAI,MAAM;AAC3B,YAAMC,IAAG,GAAIX,KAAK,CAACE,WAAD,CAAlB;AACA,UAAI,CAACS,IAAL,EAAW;AACXC,aAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,UAAI,CAACG,WAAL;AACF,KALA;;AAMA,UAAMC,KAAI,GAAI,YAAY;AACxB,YAAMJ,IAAG,GAAIX,KAAK,CAACE,WAAD,CAAlB;AACA,UAAI,CAACS,IAAL,EAAW;AACX,YAAMA,IAAI,CAACK,QAAL,CAAc,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,YAAID,KAAJ,EAAW;AACTE,qBAAW;AACb,SAFA,MAEO;AACLP,iBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,MAA7B;AACF;AACD,OANK,CAAN;AAOF,KAVA;;AAYA,aAASC,WAAT,GAAwB;AACtB,YAAMC,QAAO,GAAI,gEAAjB;AACA,YAAMC,IAAG,GAAI,cAAclB,SAAS,CAACC,QAAxB,GAAmC,YAAnC,GAAkDD,SAAS,CAACE,QAA5D,GAAuE,sBAApF;AACAiB,WAAK,CAACF,QAAD,EAAW;AACdG,cAAM,EAAE,MADM;AAEdF,YAAI,EAAEA,IAFQ;AAGdG,eAAO,EAAE;AACP,0BAAgB;AADT;AAHK,OAAX,CAAL,CAMGC,IANH,CAMQC,QAAO,IAAK;AAClBd,eAAO,CAACC,GAAR,CAAYa,QAAZ;;AACA,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,oBAAoBF,QAAQ,CAACG,MAAvC,CAAN;AACF;;AACA,eAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,OAZD,EAYGL,IAZH,CAYQM,MAAK,IAAK;AAChB,cAAMC,KAAI,GAAID,MAAM,CAACE,YAArB;AACAC,cAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,OAA9B,EAAuCJ,KAAvC;AACApB,eAAO,CAACC,GAAR,CAAY,SAAZ,EAHgB,CAIhB;AACD,OAjBD,EAiBGwB,KAjBH,CAiBSC,KAAI,IAAK;AAChBC,aAAK,CAAC,sBAAsBD,KAAvB,CAAL;AACD,OAnBD;AAoBF;;AAEA,WAAO;AACLnC,eADK;AACMG,oBADN;AACsBI,oBADtB;AACsCK;AADtC,KAAP;AAGF;;AA9Da,CAAf","names":["reactive","ref","unref","setup","ruleFormRef","loginForm","username","password","loginFormRules","required","message","trigger","resetLoginForm","form","console","log","resetFields","login","validate","valid","fields","accessLogin","loginUrl","body","fetch","method","headers","then","response","ok","Error","status","json","result","token","access_token","window","sessionStorage","setItem","catch","error","alert"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/LoginView.vue"],"sourcesContent":["<template>\n<div class=\"login_container\">\n  <div class=\"login_box\">\n    <!-- logo image -->\n    <div class=\"avator_box\">\n      <img src=\"../assets/logo.png\" alt=\"logo\">\n    </div>\n    <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginFormRules\" label-width=\"120\" class=\"login_form\">\n      <!-- username -->\n      <el-form-item label = \"Username:\" prop=\"username\">\n        <el-input v-model=\"loginForm.username\" placeholder=\"Please input Email address\" :prefix-icon=\"Search\"/>\n      </el-form-item>\n        <!-- password -->\n      <el-form-item label = \"Password:\" prop=\"password\">\n        <el-input v-model=\"loginForm.password\" type=\"password\" placeholder=\"Please input password\" show-password :prefix-icon=\"icon-password\"/>\n      </el-form-item>\n        <!-- buttons -->\n      <el-form-item class=\"btns\">\n        <el-button type=\"primary\" @click=\"login\">Log In</el-button>\n        <el-button type=\"info\" @click=\"resetLoginForm\">Reset</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</div>\n</template>\n\n<script>\nimport { reactive, ref, unref } from 'vue'\n\nexport default {\n  setup () {\n    const ruleFormRef = ref()\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    })\n    const loginFormRules = reactive({\n      username: [\n        { required: true, message: 'Please input a valid account', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: 'Please input password', trigger: 'blur' }\n      ]\n    })\n\n    const resetLoginForm = () => {\n      const form = unref(ruleFormRef)\n      if (!form) return\n      console.log('fa')\n      form.resetFields()\n    }\n    const login = async () => {\n      const form = unref(ruleFormRef)\n      if (!form) return\n      await form.validate((valid, fields) => {\n        if (valid) {\n          accessLogin()\n        } else {\n          console.log('error submit!', fields)\n        }\n      })\n    }\n\n    function accessLogin () {\n      const loginUrl = 'https://annielyticx-gamedataauth.azurewebsites.net/oauth/token'\n      const body = 'username=' + loginForm.username + '&password=' + loginForm.password + '&grant_type=password'\n      fetch(loginUrl, {\n        method: 'post',\n        body: body,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response)\n        if (!response.ok) {\n          throw new Error('Failed to login' + response.status)\n        }\n        return response.json()\n      }).then(result => {\n        const token = result.access_token\n        window.sessionStorage.setItem('token', token)\n        console.log('success')\n        // $router.push('/home')\n      }).catch(error => {\n        alert('Failed to login :' + error)\n      })\n    }\n\n    return {\n      loginForm, loginFormRules, resetLoginForm, login\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n    background-color: #2b4b6b;\n    height: 100%;\n}\n\n.login_box {\n    width: 450px;\n    height: 300px;\n    background-color: white;\n    border-radius: 3px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.avator_box {\n    height: 130px;\n    width: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #ddd;\n    position: absolute;\n    left: 50%;\n    top: -50%;\n    transform: translate(-50%, 50%);\n    background-color: #fff;\n    img {\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n        background-color: #eee;\n    }\n}\n\n.login_form {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n\n.btns {\n    display: flex;\n    justify-content: flex-end;\n    float: right;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}