{"ast":null,"code":"export default {\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: []\n    };\n  },\n\n  methods: {\n    fullname: function (id) {\n      console.log(id);\n    },\n    getUserList: async function () {\n      this.userlist = [{\n        _id: '12345',\n        username: 'userOne',\n        first_name: 'User',\n        last_name: 'one',\n        password: 'slowaging123',\n        address: 'long long text to see',\n        profession: ['a', 'b', 'c'],\n        email: 'hello@163.com',\n        cell: '1000000'\n      }, {\n        _id: '12ddd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1dsgad5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1daggag5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12dagdgae5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12agadd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }]; // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res)\n      // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n    addUser: function () {},\n    handleSizeChange: function (size) {\n      this.queryInfo.pagesize = size;\n      this.getUserList();\n    },\n    handleCurrentChange: function (page) {\n      this.queryInfo.pagenum = page;\n      this.getUserList();\n    },\n    editUser: function (id) {\n      console.log(id);\n    },\n    removeUser: function (id) {}\n  },\n  computed: {\n    total: function () {\n      return this.userlist.length;\n    }\n  },\n\n  created() {\n    this.getUserList();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","queryInfo","query","pagenum","pagesize","userlist","methods","fullname","id","console","log","getUserList","_id","username","first_name","last_name","password","address","profession","email","cell","addUser","handleSizeChange","size","handleCurrentChange","page","editUser","removeUser","computed","total","length","created"],"sourceRoot":"","sources":["/Volumes/iMacDisk/Users/Shared/GitHub/StudyLog/sharemap_manage/src/views/user/UserList.vue"],"sourcesContent":["<template>\n  <div>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">Home</el-breadcrumb-item>\n      <el-breadcrumb-item>User Management</el-breadcrumb-item>\n      <el-breadcrumb-item>User List</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- list -->\n    <el-card>\n      <!-- search and add -->\n      <el-row :gutter=\"20\">\n        <el-col :span=\"8\">\n          <el-input placeholder=\"Input name\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n            <template  #append>\n              <el-button type=\"primary\" :icon=\"Search\" @click=\"getUserList\">Search</el-button>\n            </template>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">Add User</el-button>\n        </el-col>\n      </el-row>\n      <!-- table -->\n       <!-- height=\"50\" -->\n      <el-table :data=\"userlist\" border stripe>\n        <el-table-column type=\"index\"></el-table-column>\n        <el-table-column label=\"Username\" prop=\"username\"></el-table-column>\n        <el-table-column label=\"Name\">\n          <template #default=\"scope\">{{scope.row.first_name}} {{scope.row.last_name}}</template>\n        </el-table-column>\n        <el-table-column label=\"Address\" prop=\"address\"></el-table-column>\n        <el-table-column label=\"Profession\" prop=\"profession\"></el-table-column>\n        <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n        <el-table-column label=\"Cell\" prop=\"cell\"></el-table-column>\n        <el-table-column label=\"Manage\" width=\"135px\">\n          <template #default=\"scope\">\n            <!-- buttons -->\n            <el-button type=\"primary\" @click=\"editUser(scope.row._id)\">Edit</el-button>\n            <el-button type=\"danger\" @click=\"removeUser(scope.row._id)\">Delete</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- paging -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!-- addUser -->\n  </div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10\n      },\n      userlist: []\n    }\n  },\n  methods: {\n    fullname: function (id) {\n      console.log(id)\n    },\n    getUserList: async function () {\n      this.userlist = [{\n        _id: '12345',\n        username: 'userOne',\n        first_name: 'User',\n        last_name: 'one',\n        password: 'slowaging123',\n        address: 'long long text to see',\n        profession: ['a', 'b', 'c'],\n        email: 'hello@163.com',\n        cell: '1000000'\n      }, {\n        _id: '12ddd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1dsgad5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '1daggag5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12dagdgae5',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }, {\n        _id: '12agadd345',\n        username: 'user2',\n        first_name: 'User',\n        last_name: '2',\n        password: 'slowaging123d',\n        profession: ['a', 'b'],\n        email: 'hello@163.com'\n      }]\n      // const { data: res } = await this.$http.get('/weatherforecast')\n      // if (res.meta.status !== 200) {\n      //   console.log(res)\n\n      //   return this.$message.error('Failed')\n      // }\n      // console.log(res)\n      // this.userlist = res.data\n      // await this.$http.get('/api/user')\n      // const loginUrl = 'https://localhost:5001/api/user'\n      // fetch(loginUrl, {\n      //   method: 'get',\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //     // Authorization: token\n      //   }\n      //   // , mode: 'no-cors'\n      // }).then(response => {\n      //   console.log(response)\n      //   if (!response.ok) {\n      //     throw new Error(response.status)\n      //   }\n      //   return response.json()\n      // }).then(result => {\n      // }).catch(error => {\n      //   alert(error)\n      // })\n    },\n    addUser: function () {\n\n    },\n    handleSizeChange: function (size) {\n      this.queryInfo.pagesize = size\n      this.getUserList()\n    },\n    handleCurrentChange: function (page) {\n      this.queryInfo.pagenum = page\n      this.getUserList()\n    },\n    editUser: function (id) {\n      console.log(id)\n    },\n    removeUser: function (id) {\n\n    }\n  },\n  computed: {\n    total: function () {\n      return this.userlist.length\n    }\n  },\n  created () {\n    this.getUserList()\n  }\n}\n</script>\n<style lang=\"less\" scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}